syntax = "proto3";
package plugnmeet;

option go_package = "github.com/mynaparrot/plugnmeet-protocol/plugnmeet";

enum AnalyticsEventType {
  ANALYTICS_EVENT_TYPE_ROOM = 0;
  ANALYTICS_EVENT_TYPE_USER = 1;
}

message AnalyticsDataMsg {
  AnalyticsEventType event_type = 1;
  AnalyticsEvents event_name = 2;
  optional string event_value_string = 3; // it will always use SET
  optional int64 event_value_integer = 4; // it will always use INCRBY
  optional string room_id = 5;
  optional string room_sid = 6;
  optional string user_id = 7;
  optional string user_name = 8;
  optional int64 time = 9;
  bool is_admin = 10;
}

message AnalyticsEventData{
  string name = 1;
  uint32 total = 2;
  repeated string values = 3;
}

message AnalyticsRoomInfo {
  string room_id = 1;
  string room_title = 2;
  int64 room_total_users = 3;
  int64 room_creation = 4;
  int64 room_ended = 5;
  int64 room_duration = 6;
  repeated AnalyticsEventData events = 9;
}

message AnalyticsUserInfo {
  string user_id = 1;
  string name = 2;
  bool is_admin = 3;
  optional string extra_data = 4;
  repeated AnalyticsEventData events = 5;
}

message AnalyticsResult {
    AnalyticsRoomInfo room = 1;
    repeated AnalyticsUserInfo users = 2;
}

message AnalyticsRedisUserInfo {
  optional string name = 1;
  bool is_admin = 2;
  optional string extra_data = 3;
}

enum AnalyticsEvents {
  ANALYTICS_EVENT_UNKNOWN = 0;
  // room related
  ANALYTICS_EVENT_ROOM_POLL_ADDED = 1;
  // user join will be room related
  // after take record it will pass to user
  ANALYTICS_EVENT_USER_JOINED  = 2;

  // room recorder
  ANALYTICS_EVENT_ROOM_RECORDING_STARTED = 3;
  ANALYTICS_EVENT_ROOM_RECORDING_ENDED = 4;
  ANALYTICS_EVENT_ROOM_RTMP_STARTED = 5;
  ANALYTICS_EVENT_ROOM_RTMP_ENDED = 6;

  ANALYTICS_EVENT_ROOM_BREAKOUT_ROOM = 7;
  ANALYTICS_EVENT_ROOM_ETHERPAD_ENABLED = 8;
  ANALYTICS_EVENT_ROOM_ETHERPAD_DISABLED = 9;

  ANALYTICS_EVENT_ROOM_EXTERNAL_DISPLAY_LINK_STARTED = 10;
  ANALYTICS_EVENT_ROOM_EXTERNAL_DISPLAY_LINK_ENDED = 11;

  ANALYTICS_EVENT_ROOM_EXTERNAL_MEDIA_PLAYER_STARTED = 12;
  ANALYTICS_EVENT_ROOM_EXTERNAL_MEDIA_PLAYER_ENDED = 13;

  ANALYTICS_EVENT_ROOM_SPEECH_SERVICE_STARTED = 14;
  ANALYTICS_EVENT_ROOM_SPEECH_SERVICE_ENDED = 15;
  ANALYTICS_EVENT_ROOM_SPEECH_SERVICE_TOTAL_USAGE = 35;

  ANALYTICS_EVENT_ROOM_INGRESS_CREATED = 16;

  // here all related with user
  ANALYTICS_EVENT_USER_LEFT  = 17;
  // microphone
  ANALYTICS_EVENT_USER_STARTED_MIC = 18;
  ANALYTICS_EVENT_USER_STOPPED_MIC = 19;
  ANALYTICS_EVENT_USER_MUTED_MIC   = 20;
  ANALYTICS_EVENT_USER_UNMUTED_MIC = 21;
  ANALYTICS_EVENT_USER_TALKED = 41;

  // webcam
  ANALYTICS_EVENT_USER_STARTED_WEBCAM = 22;
  ANALYTICS_EVENT_USER_STOPPED_WEBCAM = 23;

  // screen share
  ANALYTICS_EVENT_USER_STARTED_SCREEN_SHARE = 24;
  ANALYTICS_EVENT_USER_STOPPED_SCREEN_SHARE = 25;

  // polls
  ANALYTICS_EVENT_USER_VOTED_POLL = 26;

  // chat
  ANALYTICS_EVENT_USER_PUBLIC_CHAT = 27;
  ANALYTICS_EVENT_USER_PRIVATE_CHAT = 28;
  ANALYTICS_EVENT_USER_CHAT_FILES = 29;

  // whiteboard
  ANALYTICS_EVENT_USER_WHITEBOARD_ANNOTATED = 30;
  ANALYTICS_EVENT_USER_WHITEBOARD_FILES_ADDED = 31;

  // etc
  ANALYTICS_EVENT_USER_INVISIBLE_INTERFACE = 32;
  ANALYTICS_EVENT_USER_RAISE_HAND = 33;
  ANALYTICS_EVENT_USER_SPEECH_SERVICES_USAGE = 34;
  ANALYTICS_EVENT_USER_SPEECH_SERVICES_STARTED = 36;
  ANALYTICS_EVENT_USER_SPEECH_SERVICES_ENDED = 37;

  ANALYTICS_EVENT_USER_CONNECTION_QUALITY_EXCELLENT = 38;
  ANALYTICS_EVENT_USER_CONNECTION_QUALITY_GOOD = 39;
  ANALYTICS_EVENT_USER_CONNECTION_QUALITY_POOR = 40;


  // next ID: 42
}
