// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: plugnmeet_datamessage.proto

package plugnmeet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataMsgBodyType int32

const (
	// SYSTEM type
	DataMsgBodyType_UNKNOWN                      DataMsgBodyType = 0
	DataMsgBodyType_FILE_UPLOAD                  DataMsgBodyType = 1
	DataMsgBodyType_INFO                         DataMsgBodyType = 2
	DataMsgBodyType_ALERT                        DataMsgBodyType = 3
	DataMsgBodyType_USER_VISIBILITY_CHANGE       DataMsgBodyType = 4
	DataMsgBodyType_EXTERNAL_MEDIA_PLAYER_EVENTS DataMsgBodyType = 5
	DataMsgBodyType_NEW_POLL_RESPONSE            DataMsgBodyType = 6
	DataMsgBodyType_SPEECH_SUBTITLE_TEXT         DataMsgBodyType = 7
	// WHITEBOARD type
	DataMsgBodyType_REQ_FULL_WHITEBOARD_DATA    DataMsgBodyType = 8
	DataMsgBodyType_RES_FULL_WHITEBOARD_DATA    DataMsgBodyType = 9
	DataMsgBodyType_SCENE_UPDATE                DataMsgBodyType = 10
	DataMsgBodyType_POINTER_UPDATE              DataMsgBodyType = 11
	DataMsgBodyType_WHITEBOARD_APP_STATE_CHANGE DataMsgBodyType = 12
	DataMsgBodyType_ADD_WHITEBOARD_FILE         DataMsgBodyType = 13
	DataMsgBodyType_ADD_WHITEBOARD_OFFICE_FILE  DataMsgBodyType = 14
	DataMsgBodyType_PAGE_CHANGE                 DataMsgBodyType = 15
)

// Enum value maps for DataMsgBodyType.
var (
	DataMsgBodyType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "FILE_UPLOAD",
		2:  "INFO",
		3:  "ALERT",
		4:  "USER_VISIBILITY_CHANGE",
		5:  "EXTERNAL_MEDIA_PLAYER_EVENTS",
		6:  "NEW_POLL_RESPONSE",
		7:  "SPEECH_SUBTITLE_TEXT",
		8:  "REQ_FULL_WHITEBOARD_DATA",
		9:  "RES_FULL_WHITEBOARD_DATA",
		10: "SCENE_UPDATE",
		11: "POINTER_UPDATE",
		12: "WHITEBOARD_APP_STATE_CHANGE",
		13: "ADD_WHITEBOARD_FILE",
		14: "ADD_WHITEBOARD_OFFICE_FILE",
		15: "PAGE_CHANGE",
	}
	DataMsgBodyType_value = map[string]int32{
		"UNKNOWN":                      0,
		"FILE_UPLOAD":                  1,
		"INFO":                         2,
		"ALERT":                        3,
		"USER_VISIBILITY_CHANGE":       4,
		"EXTERNAL_MEDIA_PLAYER_EVENTS": 5,
		"NEW_POLL_RESPONSE":            6,
		"SPEECH_SUBTITLE_TEXT":         7,
		"REQ_FULL_WHITEBOARD_DATA":     8,
		"RES_FULL_WHITEBOARD_DATA":     9,
		"SCENE_UPDATE":                 10,
		"POINTER_UPDATE":               11,
		"WHITEBOARD_APP_STATE_CHANGE":  12,
		"ADD_WHITEBOARD_FILE":          13,
		"ADD_WHITEBOARD_OFFICE_FILE":   14,
		"PAGE_CHANGE":                  15,
	}
)

func (x DataMsgBodyType) Enum() *DataMsgBodyType {
	p := new(DataMsgBodyType)
	*p = x
	return p
}

func (x DataMsgBodyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataMsgBodyType) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_datamessage_proto_enumTypes[0].Descriptor()
}

func (DataMsgBodyType) Type() protoreflect.EnumType {
	return &file_plugnmeet_datamessage_proto_enumTypes[0]
}

func (x DataMsgBodyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataMsgBodyType.Descriptor instead.
func (DataMsgBodyType) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_datamessage_proto_rawDescGZIP(), []int{0}
}

type DataChannelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type       DataMsgBodyType `protobuf:"varint,2,opt,name=type,proto3,enum=plugnmeet.DataMsgBodyType" json:"type,omitempty"`
	FromUserId string          `protobuf:"bytes,3,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId   *string         `protobuf:"bytes,4,opt,name=to_user_id,json=toUserId,proto3,oneof" json:"to_user_id,omitempty"`
	Message    string          `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DataChannelMessage) Reset() {
	*x = DataChannelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_datamessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataChannelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChannelMessage) ProtoMessage() {}

func (x *DataChannelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_datamessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChannelMessage.ProtoReflect.Descriptor instead.
func (*DataChannelMessage) Descriptor() ([]byte, []int) {
	return file_plugnmeet_datamessage_proto_rawDescGZIP(), []int{0}
}

func (x *DataChannelMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataChannelMessage) GetType() DataMsgBodyType {
	if x != nil {
		return x.Type
	}
	return DataMsgBodyType_UNKNOWN
}

func (x *DataChannelMessage) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *DataChannelMessage) GetToUserId() string {
	if x != nil && x.ToUserId != nil {
		return *x.ToUserId
	}
	return ""
}

func (x *DataChannelMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_plugnmeet_datamessage_proto protoreflect.FileDescriptor

var file_plugnmeet_datamessage_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70,
	0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x22, 0xc2, 0x01, 0x0a, 0x12, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73,
	0x67, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x2a, 0x80, 0x03,
	0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x45,
	0x52, 0x54, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x56, 0x49, 0x53,
	0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x04,
	0x12, 0x20, 0x0a, 0x1c, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x4d, 0x45, 0x44,
	0x49, 0x41, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53,
	0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x45, 0x57, 0x5f, 0x50, 0x4f, 0x4c, 0x4c, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x50, 0x45,
	0x45, 0x43, 0x48, 0x5f, 0x53, 0x55, 0x42, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x54, 0x45, 0x58,
	0x54, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x51, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f,
	0x57, 0x48, 0x49, 0x54, 0x45, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10,
	0x08, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x53, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x57, 0x48,
	0x49, 0x54, 0x45, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x09, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x10, 0x0b, 0x12, 0x1f, 0x0a, 0x1b, 0x57, 0x48, 0x49, 0x54, 0x45, 0x42, 0x4f,
	0x41, 0x52, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x10, 0x0c, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x44, 0x44, 0x5f, 0x57, 0x48,
	0x49, 0x54, 0x45, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x0d, 0x12,
	0x1e, 0x0a, 0x1a, 0x41, 0x44, 0x44, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x42, 0x4f, 0x41, 0x52,
	0x44, 0x5f, 0x4f, 0x46, 0x46, 0x49, 0x43, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x0e, 0x12,
	0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0f,
	0x42, 0xa2, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65,
	0x65, 0x74, 0x42, 0x19, 0x50, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x79, 0x6e, 0x61,
	0x70, 0x61, 0x72, 0x72, 0x6f, 0x74, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x6e, 0x6d,
	0x65, 0x65, 0x74, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x50, 0x6c, 0x75, 0x67,
	0x6e, 0x6d, 0x65, 0x65, 0x74, 0xca, 0x02, 0x09, 0x50, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65,
	0x74, 0xe2, 0x02, 0x15, 0x50, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x50, 0x6c, 0x75, 0x67,
	0x6e, 0x6d, 0x65, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugnmeet_datamessage_proto_rawDescOnce sync.Once
	file_plugnmeet_datamessage_proto_rawDescData = file_plugnmeet_datamessage_proto_rawDesc
)

func file_plugnmeet_datamessage_proto_rawDescGZIP() []byte {
	file_plugnmeet_datamessage_proto_rawDescOnce.Do(func() {
		file_plugnmeet_datamessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugnmeet_datamessage_proto_rawDescData)
	})
	return file_plugnmeet_datamessage_proto_rawDescData
}

var file_plugnmeet_datamessage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_plugnmeet_datamessage_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_plugnmeet_datamessage_proto_goTypes = []any{
	(DataMsgBodyType)(0),       // 0: plugnmeet.DataMsgBodyType
	(*DataChannelMessage)(nil), // 1: plugnmeet.DataChannelMessage
}
var file_plugnmeet_datamessage_proto_depIdxs = []int32{
	0, // 0: plugnmeet.DataChannelMessage.type:type_name -> plugnmeet.DataMsgBodyType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_plugnmeet_datamessage_proto_init() }
func file_plugnmeet_datamessage_proto_init() {
	if File_plugnmeet_datamessage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugnmeet_datamessage_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DataChannelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugnmeet_datamessage_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugnmeet_datamessage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugnmeet_datamessage_proto_goTypes,
		DependencyIndexes: file_plugnmeet_datamessage_proto_depIdxs,
		EnumInfos:         file_plugnmeet_datamessage_proto_enumTypes,
		MessageInfos:      file_plugnmeet_datamessage_proto_msgTypes,
	}.Build()
	File_plugnmeet_datamessage_proto = out.File
	file_plugnmeet_datamessage_proto_rawDesc = nil
	file_plugnmeet_datamessage_proto_goTypes = nil
	file_plugnmeet_datamessage_proto_depIdxs = nil
}
